"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var observable_array_1 = require("tns-core-modules/data/observable-array/observable-array");
var ContactsService = /** @class */ (function () {
    function ContactsService() {
        this.contacts = new observable_array_1.ObservableArray({ id: "0", name: "Peter Maffay", email: "peter.maffay@test.com", template: "default" }, { id: "1", name: "Markus Müller", email: "peter.maffay@test.com", template: "default" }, { id: "2", name: "Klaus Schmidt", email: "peter.maffay@test.com", template: "default" }, { id: "3", name: "Paul Panzer", email: "peter.maffay@test.com", template: "default" }, { id: "4", name: "Torsten Meier", email: "peter.maffay@test.com", template: "default" }, { id: "5", name: "Günther Jauch", email: "peter.maffay@test.com", template: "default" }, { id: "6", name: "Uwe Ludolf", email: "peter.maffay@test.com", template: "default" }, { id: "7", name: "Ernst Kaufmann", email: "peter.maffay@test.com", template: "default" }, { id: "8", name: "Johann Fröhlich", email: "peter.maffay@test.com", template: "default" }, { id: "9", name: "Martha Traurig", email: "peter.maffay@test.com", template: "default" }, { id: "10", name: "Werner Wunderlich", email: "peter.maffay@test.com", template: "default" }, { id: "11", name: "Jürgen Tieze", email: "peter.maffay@test.com", template: "default" }, { id: "12", name: "Chris Ernst", email: "peter.maffay@test.com", template: "default" }, { id: "13", name: "Mara Wagner", email: "peter.maffay@test.com", template: "default" }, { id: "14", name: "Timo Lobrecht", email: "peter.maffay@test.com", template: "default" }, { id: "15", name: "Tina Stürmer", email: "peter.maffay@test.com", template: "default" }, { id: "16", name: "Leo Dormhagen", email: "peter.maffay@test.com", template: "default" });
    }
    ContactsService.prototype.getContacts = function () {
        return this.contacts;
    };
    ContactsService.prototype.getContact = function (id) {
        return this.contacts.filter(function (item) { return item.id === id; })[0];
    };
    ContactsService.prototype.setContact = function (c) {
        var idx = this.contacts.indexOf(this.getContact(c.id));
        this.contacts.getItem(idx).name = c.name;
        this.contacts.getItem(idx).email = c.email;
    };
    ContactsService = __decorate([
        core_1.Injectable()
    ], ContactsService);
    return ContactsService;
}());
exports.ContactsService = ContactsService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFjdHMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvbnRhY3RzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBMkM7QUFHM0MsNEZBQTBGO0FBRzFGO0lBREE7UUFHUyxhQUFRLEdBQUcsSUFBSSxrQ0FBZSxDQUNyQyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBQyxFQUNyRixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUN2RixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUN2RixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUNyRixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUN2RixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUN2RixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUNwRixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQ3hGLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsRUFDekYsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUN4RixFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQzVGLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQ3ZGLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQ3RGLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQ3RGLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQ3hGLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQ3ZGLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLENBQ3hGLENBQUE7SUFlRixDQUFDO0lBYkEscUNBQVcsR0FBWDtRQUNPLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxvQ0FBVSxHQUFWLFVBQVcsRUFBVTtRQUNqQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBZCxDQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsb0NBQVUsR0FBVixVQUFXLENBQVU7UUFDcEIsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtRQUN4RCxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQTtRQUN4QyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQTtJQUMzQyxDQUFDO0lBbENXLGVBQWU7UUFEM0IsaUJBQVUsRUFBRTtPQUNBLGVBQWUsQ0FtQzNCO0lBQUQsc0JBQUM7Q0FBQSxBQW5DRCxJQW1DQztBQW5DWSwwQ0FBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29udGFjdCB9IGZyb20gJy4vY29udGFjdHMubW9kZWwnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZUFycmF5IH0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy9kYXRhL29ic2VydmFibGUtYXJyYXkvb2JzZXJ2YWJsZS1hcnJheSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDb250YWN0c1NlcnZpY2Uge1xuXG5cdHByaXZhdGUgY29udGFjdHMgPSBuZXcgT2JzZXJ2YWJsZUFycmF5PENvbnRhY3Q+KFxuXHRcdHsgaWQ6IFwiMFwiLCBuYW1lOiBcIlBldGVyIE1hZmZheVwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwifSxcblx0XHR7IGlkOiBcIjFcIiwgbmFtZTogXCJNYXJrdXMgTcO8bGxlclwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwiIH0sXG5cdFx0eyBpZDogXCIyXCIsIG5hbWU6IFwiS2xhdXMgU2NobWlkdFwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwiIH0sXG5cdFx0eyBpZDogXCIzXCIsIG5hbWU6IFwiUGF1bCBQYW56ZXJcIiwgZW1haWw6IFwicGV0ZXIubWFmZmF5QHRlc3QuY29tXCIsIHRlbXBsYXRlOiBcImRlZmF1bHRcIiB9LFxuXHRcdHsgaWQ6IFwiNFwiLCBuYW1lOiBcIlRvcnN0ZW4gTWVpZXJcIiwgZW1haWw6IFwicGV0ZXIubWFmZmF5QHRlc3QuY29tXCIsIHRlbXBsYXRlOiBcImRlZmF1bHRcIiB9LFxuXHRcdHsgaWQ6IFwiNVwiLCBuYW1lOiBcIkfDvG50aGVyIEphdWNoXCIsIGVtYWlsOiBcInBldGVyLm1hZmZheUB0ZXN0LmNvbVwiLCB0ZW1wbGF0ZTogXCJkZWZhdWx0XCIgfSxcblx0XHR7IGlkOiBcIjZcIiwgbmFtZTogXCJVd2UgTHVkb2xmXCIsIGVtYWlsOiBcInBldGVyLm1hZmZheUB0ZXN0LmNvbVwiLCB0ZW1wbGF0ZTogXCJkZWZhdWx0XCIgfSxcblx0XHR7IGlkOiBcIjdcIiwgbmFtZTogXCJFcm5zdCBLYXVmbWFublwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwiIH0sXG5cdFx0eyBpZDogXCI4XCIsIG5hbWU6IFwiSm9oYW5uIEZyw7ZobGljaFwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwiIH0sXG5cdFx0eyBpZDogXCI5XCIsIG5hbWU6IFwiTWFydGhhIFRyYXVyaWdcIiwgZW1haWw6IFwicGV0ZXIubWFmZmF5QHRlc3QuY29tXCIsIHRlbXBsYXRlOiBcImRlZmF1bHRcIiB9LFxuXHRcdHsgaWQ6IFwiMTBcIiwgbmFtZTogXCJXZXJuZXIgV3VuZGVybGljaFwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwiIH0sXG5cdFx0eyBpZDogXCIxMVwiLCBuYW1lOiBcIkrDvHJnZW4gVGllemVcIiwgZW1haWw6IFwicGV0ZXIubWFmZmF5QHRlc3QuY29tXCIsIHRlbXBsYXRlOiBcImRlZmF1bHRcIiB9LFxuXHRcdHsgaWQ6IFwiMTJcIiwgbmFtZTogXCJDaHJpcyBFcm5zdFwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwiIH0sXG5cdFx0eyBpZDogXCIxM1wiLCBuYW1lOiBcIk1hcmEgV2FnbmVyXCIsIGVtYWlsOiBcInBldGVyLm1hZmZheUB0ZXN0LmNvbVwiLCB0ZW1wbGF0ZTogXCJkZWZhdWx0XCIgfSxcblx0XHR7IGlkOiBcIjE0XCIsIG5hbWU6IFwiVGltbyBMb2JyZWNodFwiLCBlbWFpbDogXCJwZXRlci5tYWZmYXlAdGVzdC5jb21cIiwgdGVtcGxhdGU6IFwiZGVmYXVsdFwiIH0sXG5cdFx0eyBpZDogXCIxNVwiLCBuYW1lOiBcIlRpbmEgU3TDvHJtZXJcIiwgZW1haWw6IFwicGV0ZXIubWFmZmF5QHRlc3QuY29tXCIsIHRlbXBsYXRlOiBcImRlZmF1bHRcIiB9LFxuXHRcdHsgaWQ6IFwiMTZcIiwgbmFtZTogXCJMZW8gRG9ybWhhZ2VuXCIsIGVtYWlsOiBcInBldGVyLm1hZmZheUB0ZXN0LmNvbVwiLCB0ZW1wbGF0ZTogXCJkZWZhdWx0XCIgfSxcblx0KVxuXG5cdGdldENvbnRhY3RzKCk6IE9ic2VydmFibGVBcnJheTxDb250YWN0PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRhY3RzO1xuICAgIH1cblxuICAgIGdldENvbnRhY3QoaWQ6IFN0cmluZyk6IENvbnRhY3Qge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250YWN0cy5maWx0ZXIoaXRlbSA9PiBpdGVtLmlkID09PSBpZClbMF07XG5cdH1cblx0XG5cdHNldENvbnRhY3QoYzogQ29udGFjdCl7XG5cdFx0Y29uc3QgaWR4ID0gdGhpcy5jb250YWN0cy5pbmRleE9mKHRoaXMuZ2V0Q29udGFjdChjLmlkKSlcblx0XHR0aGlzLmNvbnRhY3RzLmdldEl0ZW0oaWR4KS5uYW1lID0gYy5uYW1lXG5cdFx0dGhpcy5jb250YWN0cy5nZXRJdGVtKGlkeCkuZW1haWwgPSBjLmVtYWlsXG5cdH1cbn0iXX0=